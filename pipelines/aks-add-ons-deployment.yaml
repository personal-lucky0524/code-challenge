
name: $(BuildDefinitionName)_$(date:yyyyMMdd)$(rev:.r)

trigger: none
pr: none

pool:
  name: Code-Challenge-Agent-Pool
  demands:
    - agent.name -equals code-challenge

variables:
  - name: azureSubscriptionEndpoint
    value: 'Code-Challenge-ARM-SC'
  - name: azureResourceGroup
    value: 'code-challenge-rg'
  - name: kubernetesClusterSc
    value: 'code-challenge-aks'
  - name: imageRepository
    value: 'nginx'
  - name: dockerRegistryServiceConnection
    value: 'code-challenge-docker'
  - name: containerRegistry
    value: demoenvchnacracr.azurecr.io
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/Dockerfile'
  - name: secretName
    value: 'imagepullsecret'
  - name: k8sNamespace
    value: 'default'
  - group: azure-keyvault-vg

stages:
  - stage: AddOns_Deplyment
    displayName: AKS Addons Deployment
    jobs:
    - job: Ingress_Controller
      displayName: Ingress Controller Deployment
      steps:
      - task: HelmInstaller@0
        enabled: false
        displayName: 'Install Helm 2.14.1'
        inputs:
          helmVersion: 2.14.1
      - task: AzureCLI@2
        displayName: 'Ingress Controller Deployment'
        inputs:
          azureSubscription: '$(azureSubscriptionEndpoint)'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            az login --service-principal -u $(client-id) -p $(client-secret) --tent $(tenantid)
            az account set --subscription $subscriptionid
            az aks get-credentials --name code-challenge-aks --resource-group $(azureResourceGroup) --admin
            helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
            helm repo update
            helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx --namespace default
    
    - job: CertManager_Deployment
      displayName: CertManager Deployment
      steps:
      - task: AzureCLI@2
        displayName: 'Cert Manager Deployment'
        inputs:
          azureSubscription: '$(azureSubscriptionEndpoint)'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            helm repo add jetstack https://charts.jetstack.io
            helm repo update
            helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.9.1 --set installCRDs=true